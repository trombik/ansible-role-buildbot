---
- hosts: server
  become: yes
  become_method: sudo
  environment:
    http_proxy: "{{ http_proxy | default() }}"
    https_proxy: "{{ https_proxy | default() }}"
    no_proxy: "{{ no_proxy | default() }}"

  pre_tasks:
  roles:
    - name: trombik.git
    - name: trombik.freebsd_pkg_repo
      when: ansible_os_family == 'FreeBSD'
    - ansible-role-buildbot
  vars:
    freebsd_pkg_repo:
      FreeBSD:
        enabled: "false"
        state: present
      FreeBSD_latest:
        enabled: "true"
        state: present
        url: pkg+https://pkg.FreeBSD.org/${ABI}/latest
        signature_type: fingerprints
        fingerprints: /usr/share/keys/pkg
        mirror_type: srv
    buildbot_flags_freebsd: |
      buildbot_basedir="{{ buildbot_conf_dir }}"
      buildbot_user="{{ buildbot_user }}"
    buildbot_extra_packages:
      - devel/py-buildbot-www
    buildbot_flags: "{{ buildbot_flags_freebsd }}"
    buildbot_master_cfg_content: |
      from buildbot.plugins import *
      # vim: ft=python
      git_pull = steps.Git(repourl='https://github.com/trombik/freebsd-ports-mini',
              branch='20190409')
      create_db_dir = steps.ShellCommand(name='Create PORT_DBDIR',
              command='mkdir -p /usr/local/etc/buildbot_worker/pkg/build/var/db/ports')
      make = steps.ShellCommand(
              name='make',
              env={'PORT_DBDIR': '/usr/local/etc/buildbot_worker/pkg/build/var/db/ports'},
              command='make -C ports-mgmt/pkg',
              description='make pkg from ports')
      make_clean = steps.ShellCommand(
              name='make clean',
              env={'PORT_DBDIR': '/usr/local/etc/buildbot_worker/pkg/build/var/db/ports'},
              command='make -C ports-mgmt/pkg clean',
              description='make clean'
              )
      build_pkg = util.BuildFactory()
      build_pkg.addStep(git_pull)
      build_pkg.addStep(create_db_dir)
      build_pkg.addStep(make)
      build_pkg.addStep(make_clean)
      hourlyscheduler = schedulers.Periodic(name="hourly",
                                            builderNames=["pkg"],
                                            periodicBuildTimer=3600)
      c = BuildmasterConfig = {}
      c['workers'] = [worker.Worker("worker1", "pass")]
      c['protocols'] = {'pb': {'port': 9989}}
      c['change_source'] = []
      c['change_source'].append(changes.GitPoller(
              'git://github.com/buildbot/hello-world.git',
              workdir='gitpoller-workdir', branch='master',
              pollInterval=300))

      c['change_source'].append(changes.GitPoller(
          'https://github.com/trombik/freebsd-ports-mini',
          workdir='ports',
          branch='20190409',
          pollAtLaunch=True,
          gitbin='/usr/local/bin/git',
          pollInterval=300))

      c['schedulers'] = []
      c['schedulers'].append(schedulers.SingleBranchScheduler(
                                  name="all",
                                  change_filter=util.ChangeFilter(branch='master'),
                                  treeStableTimer=None,
                                  builderNames=["runtests"]))
      c['schedulers'].append(schedulers.ForceScheduler(
                                  name="force",
                                  builderNames=["runtests"]))
      c['schedulers'].append(hourlyscheduler)

      factory = util.BuildFactory()
      factory.addStep(steps.Git(repourl='git://github.com/buildbot/hello-world.git', mode='incremental'))
      factory.addStep(steps.ShellCommand(command=["trial", "hello"],
                                         env={"PYTHONPATH": "."}))
      c['builders'] = []
      c['builders'].append(
          util.BuilderConfig(name="runtests",
            workernames=["worker1"],
            factory=factory))
      c['builders'].append(
              util.BuilderConfig(name='pkg',
                  workernames=['worker1'],
                  factory=build_pkg))
      c['services'] = []
      c['title'] = "Hello World CI"
      c['titleURL'] = "https://buildbot.github.io/hello-world/"
      c['buildbotURL'] = "http://{{ ansible_em1.ipv4[0].address }}:8010/"
      c['www'] = dict(port=8010,
                      plugins=dict(waterfall_view={}, console_view={}, grid_view={}))
      c['db'] = {
          'db_url' : "sqlite:///state.sqlite",
      }
